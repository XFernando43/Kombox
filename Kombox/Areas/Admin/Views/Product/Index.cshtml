@using Kombox.Models.Models;
@model List<Product>

<div class="card shadow border-0 mt-4 py-2">
    <div class="card-header ml-0 py-3">
        <div class="row pt-4 pb-4">
            <div class="col-6">
                <h2 class="text-primary px-4">
                    Product List
                </h2>
            </div>
            <div class="col-6 text-end">
                <a asp-controller="Product" asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create new Product
                </a>
            </div>
        </div>
    </div>
    <div class="card-body p-1 mb-lg-0">
        <table class="table table-bordered table-striped">
            <tr>
                <th class="text-center">Actions</th>
                <th>ID</th>
                <th>Title</th>
                <th>Description</th>
                <th>ISBN</th>
                <th>Author</th>
                <th>Price</th>
                <th>Category</th>
            </tr>
            <tbody>
                @foreach (var obj in Model.OrderBy(or => or.ProductId))
                {
                    <tr>
                        <td class="text-center">
                            <div class="w-75 btn-group" role="group">
                                <a asp-controller="Product" asp-action="Edit" asp-route-id=@obj.ProductId class="btn btn-primary mx-2">
                                    Edit
                                </a>
                                <a asp-controller="Product" asp-action="Delete" asp-route-id=@obj.ProductId class="btn btn-danger mx-2" hidden>
                                    Delete
                                </a>
                                <a onclick="confirmDelete(@obj.ProductId)" class="btn btn-danger mx-2">
                                    Delete
                                </a>
                            </div>
                        </td>
                        <td>@obj.ProductId</td>
                        <td>@obj.Title</td>
                        <td> @Html.Raw(@obj.Description)</td>
                        <td>@obj.ISBN</td>
                        <td>@obj.Author</td>
                        <td class="text-center">@obj.Price</td>
                        <td class="text-center">@obj.Category.Name</td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
</div>

<br />
<br />
<br />
<br />

@* Este script Evita que la pagina recarge y se hagan las validaciones correspondientes *@
@section Scripts{
    @{
        <partial name="_ValidationScriptsPartial" />
    }

}


<script>
    // Función para confirmar la eliminación
    function confirmDelete(productId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "You won't be able to revert this!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Si el usuario confirma, se hace la solicitud DELETE
                deleteProduct(productId);
            }
        });
    }

    // Función para enviar la solicitud DELETE
    function deleteProduct(productId) {
        $.ajax({
            url: '/Admin/Product/Delete/' + productId,
            type: 'DELETE',
            success: function (data) {
                Swal.fire(
                    'Deleted!',
                    'The product has been deleted.',
                    'success'
                ).then(() => {
                    // Después de mostrar el mensaje, actualiza la página
                    window.location.reload();
                });
            },
            error: function (error) {
                Swal.fire(
                    'Error!',
                    'An error occurred while deleting the product.',
                    'error'
                );
            }
        });
    }
</script>

